# Insert a blank line between shell prompts
add_newline = true

# Increase the default command timeout to 2 seconds
command_timeout = 2000

# Define the order and format of the information in our prompt
#[ ](bg:#7DF9AA fg:#090c0c) --> adds a linux icon
#[](fg:#7DF9AA bg:#1C3A5E)\ --> adds a triangle after the icon
#[](fg:#1C3A5E bg:#3B76F0)\ --> adds another triangle after the linux icon

#To use glyphs, use this syntax: "\u<code> i.e  \ue0c0"

#[  n3stor ](bg:#7DF9AA fg:#090c0c)\
#[](fg:#7DF9AA bg:#1C3A5E)\
#[](fg:#1C3A5E bg:#3B76F0)\
#$symbol($git_branch[](fg:#FCF392))\

format = """\
[  n3stor ](bg:#2BBAA5 fg:#090c0c)\
[ ](bg:red fg:#2BBAA5)\
$directory\
${custom.directory_separator_not_git}\
${custom.directory_separator_git}\
[   ](fg:#8CCED1 bg:black)\
[ ](fg:black)\
$symbol( $git_branch[](fg:#8CCED1))\
$symbol( $git_commit$git_status$git_metrics$git_state)\
$fill\
$cmd_duration\
$python\
$time\
$line_break\
$character"""


palette = 'nord'


#format= ''' 
#[┌───────────────────>](bold green)
#[│](bold green)$directory$rust$package
#[└─>](bold green) '''

# Fill character (empty space) between the left and right prompt
[fill]
symbol = " "

[character]
success_symbol = '[ ➜](bold green)'
error_symbol = '[ ➜ ](bold red)'
# Disable the line break between the first and second prompt lines
[line_break]
disabled = false

[python]
style = 'teal'
symbol = ' '
format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
pyenv_version_name = false
pyenv_prefix = ''


# Customize the format of the working directory
[directory]
truncate_to_repo = true
truncation_length = 4
format = "[ $path ]($style)"
use_os_path_sep = true
style = "fg:#9FF7CD bg:red"

[git_branch]
symbol = "  "
format = "[ ](fg:black bg:#8CCED1)[$symbol$branch(:$remote_branch) ]($style)"
style = "fg:black bg:#8CCED1"


[git_metrics]
disabled = false

[package]
disabled = true # Enable to output the current working directory's package version
format = "[$symbol$version]($style) "
display_private = true

# Output the command duration if over 2 seconds
[cmd_duration]
min_time = 2_000
format = "[  $duration ]($style)"
style = "white"

# Output a styled separator right after the directory when inside a git repository.
[custom.directory_separator_git]
description = "Output a styled separator right after the directory when inside a git repository."
command = ""
# Only when inside git repository
when = "git rev-parse --is-inside-work-tree >/dev/null 2>&1"


# Output a styled separator right after the directory when NOT inside a git repository.
[custom.directory_separator_not_git]
description = "Output a styled separator right after the directory when NOT inside a git repository."
command = ""
format = "[ ](bg:black fg:red)"
#format = "[e0c0](fg:#3B76F0)"
# Only when NOT inside a git repository
when = "! git rev-parse --is-inside-work-tree > /dev/null 2>&1"



[palettes.nord]
dark_blue = '#5E81AC'
blue = '#81A1C1'
teal = '#88C0D0'
red = '#BF616A'
orange = '#D08770'
green = '#A3BE8C'
yellow = '#EBCB8B'
purple = '#B48EAD'
gray = '#434C5E'
black = '#2E3440'
white='#D8DEE9'

[palettes.onedark]
dark_blue='#61afef'
blue='#56b6c2'
red='#e06c75'
green='#98c379'
purple='#c678dd'
cyan='#56b6c2'
orange='#be5046'
yellow='#e5c07b'
gray='#828997'
white ='#abb2bf'
black='#2c323c'


[os]
format = '[$symbol](bold white) '   
disabled = false

[os.symbols]
Windows = ''
Ubuntu = ''

[time]
disabled = false
time_format = "%I:%M%P" # Hour:Minute 12hr format am/pm
#time_format = "%R%P " # Hour:Minute Format am/pm
style = "bg:#1d2230"
format = '[[  $time ](fg:#a0a9cb bg:#1d2230)]($style)'